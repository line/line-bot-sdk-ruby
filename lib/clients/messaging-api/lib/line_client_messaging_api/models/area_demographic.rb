=begin
#LINE Messaging API

#This document describes LINE Messaging API.

The version of the OpenAPI document: 0.0.1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'date'
require 'time'

module LINE::Client::MessagingApi
  class AreaDemographic
    HOKKAIDO = "jp_01".freeze
    AOMORI = "jp_02".freeze
    IWATE = "jp_03".freeze
    MIYAGI = "jp_04".freeze
    AKITA = "jp_05".freeze
    YAMAGATA = "jp_06".freeze
    FUKUSHIMA = "jp_07".freeze
    IBARAKI = "jp_08".freeze
    TOCHIGI = "jp_09".freeze
    GUNMA = "jp_10".freeze
    SAITAMA = "jp_11".freeze
    CHIBA = "jp_12".freeze
    TOKYO = "jp_13".freeze
    KANAGAWA = "jp_14".freeze
    NIIGATA = "jp_15".freeze
    TOYAMA = "jp_16".freeze
    ISHIKAWA = "jp_17".freeze
    FUKUI = "jp_18".freeze
    YAMANASHI = "jp_19".freeze
    NAGANO = "jp_20".freeze
    GIFU = "jp_21".freeze
    SHIZUOKA = "jp_22".freeze
    AICHI = "jp_23".freeze
    MIE = "jp_24".freeze
    SHIGA = "jp_25".freeze
    KYOTO = "jp_26".freeze
    OSAKA = "jp_27".freeze
    HYOUGO = "jp_28".freeze
    NARA = "jp_29".freeze
    WAKAYAMA = "jp_30".freeze
    TOTTORI = "jp_31".freeze
    SHIMANE = "jp_32".freeze
    OKAYAMA = "jp_33".freeze
    HIROSHIMA = "jp_34".freeze
    YAMAGUCHI = "jp_35".freeze
    TOKUSHIMA = "jp_36".freeze
    KAGAWA = "jp_37".freeze
    EHIME = "jp_38".freeze
    KOUCHI = "jp_39".freeze
    FUKUOKA = "jp_40".freeze
    SAGA = "jp_41".freeze
    NAGASAKI = "jp_42".freeze
    KUMAMOTO = "jp_43".freeze
    OITA = "jp_44".freeze
    MIYAZAKI = "jp_45".freeze
    KAGOSHIMA = "jp_46".freeze
    OKINAWA = "jp_47".freeze
    TAIPEI_CITY = "tw_01".freeze
    NEW_TAIPEI_CITY = "tw_02".freeze
    TAOYUAN_CITY = "tw_03".freeze
    TAICHUNG_CITY = "tw_04".freeze
    TAINAN_CITY = "tw_05".freeze
    KAOHSIUNG_CITY = "tw_06".freeze
    KEELUNG_CITY = "tw_07".freeze
    HSINCHU_CITY = "tw_08".freeze
    CHIAYI_CITY = "tw_09".freeze
    HSINCHU_COUNTY = "tw_10".freeze
    MIAOLI_COUNTY = "tw_11".freeze
    CHANGHUA_COUNTY = "tw_12".freeze
    NANTOU_COUNTY = "tw_13".freeze
    YUNLIN_COUNTY = "tw_14".freeze
    CHIAYI_COUNTY = "tw_15".freeze
    PINGTUNG_COUNTY = "tw_16".freeze
    YILAN_COUNTY = "tw_17".freeze
    HUALIEN_COUNTY = "tw_18".freeze
    TAITUNG_COUNTY = "tw_19".freeze
    PENGHU_COUNTY = "tw_20".freeze
    KINMEN_COUNTY = "tw_21".freeze
    LIENCHIANG_COUNTY = "tw_22".freeze
    BANGKOK = "th_01".freeze
    PATTAYA = "th_02".freeze
    NORTHERN = "th_03".freeze
    CENTRAL = "th_04".freeze
    SOUTHERN = "th_05".freeze
    EASTERN = "th_06".freeze
    NORTHEASTERN = "th_07".freeze
    WESTERN = "th_08".freeze
    BALI = "id_01".freeze
    BANDUNG = "id_02".freeze
    BANJARMASIN = "id_03".freeze
    JABODETABEK = "id_04".freeze
    MAKASSAR = "id_05".freeze
    MEDAN = "id_06".freeze
    PALEMBANG = "id_07".freeze
    SAMARINDA = "id_08".freeze
    SEMARANG = "id_09".freeze
    SURABAYA = "id_10".freeze
    YOGYAKARTA = "id_11".freeze
    LAINNYA = "id_12".freeze

    def self.all_vars
      @all_vars ||= [HOKKAIDO, AOMORI, IWATE, MIYAGI, AKITA, YAMAGATA, FUKUSHIMA, IBARAKI, TOCHIGI, GUNMA, SAITAMA, CHIBA, TOKYO, KANAGAWA, NIIGATA, TOYAMA, ISHIKAWA, FUKUI, YAMANASHI, NAGANO, GIFU, SHIZUOKA, AICHI, MIE, SHIGA, KYOTO, OSAKA, HYOUGO, NARA, WAKAYAMA, TOTTORI, SHIMANE, OKAYAMA, HIROSHIMA, YAMAGUCHI, TOKUSHIMA, KAGAWA, EHIME, KOUCHI, FUKUOKA, SAGA, NAGASAKI, KUMAMOTO, OITA, MIYAZAKI, KAGOSHIMA, OKINAWA, TAIPEI_CITY, NEW_TAIPEI_CITY, TAOYUAN_CITY, TAICHUNG_CITY, TAINAN_CITY, KAOHSIUNG_CITY, KEELUNG_CITY, HSINCHU_CITY, CHIAYI_CITY, HSINCHU_COUNTY, MIAOLI_COUNTY, CHANGHUA_COUNTY, NANTOU_COUNTY, YUNLIN_COUNTY, CHIAYI_COUNTY, PINGTUNG_COUNTY, YILAN_COUNTY, HUALIEN_COUNTY, TAITUNG_COUNTY, PENGHU_COUNTY, KINMEN_COUNTY, LIENCHIANG_COUNTY, BANGKOK, PATTAYA, NORTHERN, CENTRAL, SOUTHERN, EASTERN, NORTHEASTERN, WESTERN, BALI, BANDUNG, BANJARMASIN, JABODETABEK, MAKASSAR, MEDAN, PALEMBANG, SAMARINDA, SEMARANG, SURABAYA, YOGYAKARTA, LAINNYA].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if AreaDemographic.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #AreaDemographic"
    end
  end
end
