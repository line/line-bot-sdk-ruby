# LINE Messaging API(Insight)
# This document describes LINE Messaging API(Insight).
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Insight
        # Get friend demographics
        # @see https://developers.line.biz/en/reference/messaging-api/#get-demographic
        class GetFriendsDemographicsResponse
          attr_accessor :available # true if friend demographic information is available.
          attr_accessor :genders # Percentage per gender.
          attr_accessor :ages # Percentage per age group.
          attr_accessor :areas # Percentage per area.
          attr_accessor :app_types # Percentage by OS.
          attr_accessor :subscription_periods # Percentage per friendship duration.

          def initialize(
            available: nil,
            genders: nil,
            ages: nil,
            areas: nil,
            app_types: nil,
            subscription_periods: nil,
            **dynamic_attributes
          )
            
            @available = available
            @genders = genders&.map do |item|
              if item.is_a?(Hash)
                Line::Bot::V2::Insight::GenderTile.create(**item)
              else
                item
              end
            end
            @ages = ages&.map do |item|
              if item.is_a?(Hash)
                Line::Bot::V2::Insight::AgeTile.create(**item)
              else
                item
              end
            end
            @areas = areas&.map do |item|
              if item.is_a?(Hash)
                Line::Bot::V2::Insight::AreaTile.create(**item)
              else
                item
              end
            end
            @app_types = app_types&.map do |item|
              if item.is_a?(Hash)
                Line::Bot::V2::Insight::AppTypeTile.create(**item)
              else
                item
              end
            end
            @subscription_periods = subscription_periods&.map do |item|
              if item.is_a?(Hash)
                Line::Bot::V2::Insight::SubscriptionPeriodTile.create(**item)
              else
                item
              end
            end

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          def self.create(args)
            return new(**args)
          end
        end
      end
    end
  end
end
