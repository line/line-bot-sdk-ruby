# LINE Messaging API(Insight)
# This document describes LINE Messaging API(Insight).
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Insight
        class GetMessageEventResponseClick
          # @!attribute [rw] seq
          #   @return [Integer,nil] The URL's serial number.
          attr_accessor :seq
          # @!attribute [rw] url
          #   @return [String,nil] URL.
          attr_accessor :url
          # @!attribute [rw] click
          #   @return [Integer,nil] Number of times the URL was opened.
          attr_accessor :click
          # @!attribute [rw] unique_click
          #   @return [Integer,nil] Number of users that opened the URL.
          attr_accessor :unique_click
          # @!attribute [rw] unique_click_of_request
          #   @return [Integer,nil] Number of users who opened this url through any link in the message. If a message contains two links to the same URL and a user opens both links, they're counted only once.
          attr_accessor :unique_click_of_request

          # @param seq [Integer,nil] The URL's serial number.
          # @param url [String,nil] URL.
          # @param click [Integer,nil] Number of times the URL was opened.
          # @param unique_click [Integer,nil] Number of users that opened the URL.
          # @param unique_click_of_request [Integer,nil] Number of users who opened this url through any link in the message. If a message contains two links to the same URL and a user opens both links, they're counted only once.
          def initialize(
            seq: nil,
            url: nil,
            click: nil,
            unique_click: nil,
            unique_click_of_request: nil,
            **dynamic_attributes
          )
            
            @seq = seq
            @url = url
            @click = click
            @unique_click = unique_click
            @unique_click_of_request = unique_click_of_request

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          def self.create(args) # steep:ignore
            return new(**args) # steep:ignore
          end
        end
      end
    end
  end
end
