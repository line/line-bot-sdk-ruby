# Webhook Type Definition
# Webhook event definition of the LINE Messaging API
#
# The version of the OpenAPI document: 1.0.0
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Webhook
        # @see https://developers.line.biz/en/reference/messaging-api/#message-event
        class MessageContent
          # @!attribute [rw] type
          #   @return [String] Type
          attr_accessor :type
          # @!attribute [rw] id
          #   @return [String] Message ID
          attr_accessor :id

          # @param type [String] Type
          # @param id [String] Message ID
          def initialize(
            type:,
            id:,
            **dynamic_attributes
          )
            
            @type = type
            @id = id

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::Webhook::MessageContent] Instance of the class
          def self.create(args) # steep:ignore
            symbolized_args = Line::Bot::V2::Utils.deep_symbolize(args)
            klass = detect_class(type: symbolized_args[:type])
            return klass.new(**symbolized_args) if klass # steep:ignore
            return new(**symbolized_args) # steep:ignore
          end

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==(other)
            return false unless self.class == other.class

            instance_variables.all? do |var|
                instance_variable_get(var) == other.instance_variable_get(var)
            end
          end

          # @return [Integer] Hash code of the object
          def hash
            [self.class, *instance_variables.map { |var| instance_variable_get(var) }].hash
          end

          private

          def self.detect_class(type:)
            {
              audio: Line::Bot::V2::Webhook::AudioMessageContent,
              file: Line::Bot::V2::Webhook::FileMessageContent,
              image: Line::Bot::V2::Webhook::ImageMessageContent,
              location: Line::Bot::V2::Webhook::LocationMessageContent,
              sticker: Line::Bot::V2::Webhook::StickerMessageContent,
              text: Line::Bot::V2::Webhook::TextMessageContent,
              video: Line::Bot::V2::Webhook::VideoMessageContent,
            }[type.to_sym]
          end
        end
      end
    end
  end
end
