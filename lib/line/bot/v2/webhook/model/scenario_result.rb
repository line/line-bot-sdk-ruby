# Webhook Type Definition
# Webhook event definition of the LINE Messaging API
#
# The version of the OpenAPI document: 1.0.0
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Webhook
        # @see https://developers.line.biz/en/reference/messaging-api/#scenario-result-event
        class ScenarioResult
          # @!attribute [rw] scenario_id
          #   @return [String,nil] Scenario ID executed
          attr_accessor :scenario_id
          # @!attribute [rw] revision
          #   @return [Integer,nil] Revision number of the scenario set containing the executed scenario
          attr_accessor :revision
          # @!attribute [rw] start_time
          #   @return [Integer] Timestamp for when execution of scenario action started (milliseconds, LINE app time)
          attr_accessor :start_time
          # @!attribute [rw] end_time
          #   @return [Integer] Timestamp for when execution of scenario was completed (milliseconds, LINE app time)
          attr_accessor :end_time
          # @!attribute [rw] result_code
          #   @return [String] Scenario execution completion status
          attr_accessor :result_code
          # @!attribute [rw] action_results
          #   @return [Array[ActionResult],nil] Execution result of individual operations specified in action. Only included when things.result.resultCode is success.
          attr_accessor :action_results
          # @!attribute [rw] ble_notification_payload
          #   @return [String,nil] Data contained in notification.
          attr_accessor :ble_notification_payload
          # @!attribute [rw] error_reason
          #   @return [String,nil] Error reason.
          attr_accessor :error_reason

          # @param scenario_id [String,nil] Scenario ID executed
          # @param revision [Integer,nil] Revision number of the scenario set containing the executed scenario
          # @param start_time [Integer] Timestamp for when execution of scenario action started (milliseconds, LINE app time)
          # @param end_time [Integer] Timestamp for when execution of scenario was completed (milliseconds, LINE app time)
          # @param result_code [String] Scenario execution completion status
          # @param action_results [Array[ActionResult, Hash[Symbol, untyped]],nil] Execution result of individual operations specified in action. Only included when things.result.resultCode is success.
          # @param ble_notification_payload [String,nil] Data contained in notification.
          # @param error_reason [String,nil] Error reason.
          def initialize(
            scenario_id: nil,
            revision: nil,
            start_time:,
            end_time:,
            result_code:,
            action_results: nil,
            ble_notification_payload: nil,
            error_reason: nil,
            **dynamic_attributes
          )
            
            @scenario_id = scenario_id
            @revision = revision
            @start_time = start_time
            @end_time = end_time
            @result_code = result_code
            @action_results = action_results&.map do |item|
              if item.is_a?(Hash)
                Line::Bot::V2::Webhook::ActionResult.create(**item) # steep:ignore InsufficientKeywordArguments
              else
                item
              end
            end
            @ble_notification_payload = ble_notification_payload
            @error_reason = error_reason

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::Webhook::ScenarioResult] Instance of the class
          def self.create(args) # steep:ignore
            symbolized_args = Line::Bot::V2::Utils.deep_symbolize(args)
            return new(**symbolized_args) # steep:ignore
          end

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==(other)
            return false unless self.class == other.class

            instance_variables.all? do |var|
                instance_variable_get(var) == other.instance_variable_get(var)
            end
          end

          # @return [Integer] Hash code of the object
          def hash
            [self.class, *instance_variables.map { |var| instance_variable_get(var) }].hash
          end
        end
      end
    end
  end
end
