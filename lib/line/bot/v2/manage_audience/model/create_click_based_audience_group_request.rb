# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module ManageAudience
        # Create audience for click-based retargeting
        # @see https://developers.line.biz/en/reference/messaging-api/#create-click-audience-group
        class CreateClickBasedAudienceGroupRequest
          attr_accessor :description # The audience's name. This is case-insensitive, meaning AUDIENCE and audience are considered identical. Max character limit: 120 
          attr_accessor :request_id # The request ID of a broadcast or narrowcast message sent in the past 60 days. Each Messaging API request has a request ID. 
          attr_accessor :click_url # The URL clicked by the user. If empty, users who clicked any URL in the message are added to the list of recipients. Max character limit: 2,000 

          def initialize(
            description: nil,
            request_id: nil,
            click_url: nil,
            **dynamic_attributes
          )
            
            @description = description
            @request_id = request_id
            @click_url = click_url

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          def self.create(args)
            return new(**args)
          end
        end
      end
    end
  end
end
