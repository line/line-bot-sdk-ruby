# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module ManageAudience
        # Audience group
        class AudienceGroup
          attr_accessor :audience_group_id # The audience ID.
          attr_accessor :type
          attr_accessor :description # The audience's name.
          attr_accessor :status
          attr_accessor :failed_type
          attr_accessor :audience_count # The number of users included in the audience.
          attr_accessor :created # When the audience was created (in UNIX time).
          attr_accessor :request_id # The request ID that was specified when the audience was created. This is only included when `audienceGroup.type` is CLICK or IMP. 
          attr_accessor :click_url # The URL that was specified when the audience was created. This is only included when `audienceGroup.type` is CLICK and link URL is specified. 
          attr_accessor :is_ifa_audience # The value indicating the type of account to be sent, as specified when creating the audience for uploading user IDs. 
          attr_accessor :permission
          attr_accessor :create_route

          # @param audience_group_id [Integer] The audience ID.
          # @param type [String] ('UPLOAD'|'CLICK'|'IMP'|'CHAT_TAG'|'FRIEND_PATH'|'RESERVATION'|'APP_EVENT'|'VIDEO_VIEW'|'WEBTRAFFIC'|'IMAGE_CLICK'|'RICHMENU_IMP'|'RICHMENU_CLICK') 
          # @param description [String] The audience's name.
          # @param status [String] ('IN_PROGRESS'|'READY'|'FAILED'|'EXPIRED'|'INACTIVE'|'ACTIVATING') 
          # @param failed_type [String] ('AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT'|'INTERNAL_ERROR'|'') 
          # @param audience_count [Integer] The number of users included in the audience.
          # @param created [Integer] When the audience was created (in UNIX time).
          # @param request_id [String] The request ID that was specified when the audience was created. This is only included when `audienceGroup.type` is CLICK or IMP. 
          # @param click_url [String] The URL that was specified when the audience was created. This is only included when `audienceGroup.type` is CLICK and link URL is specified. 
          # @param is_ifa_audience [Boolean] The value indicating the type of account to be sent, as specified when creating the audience for uploading user IDs. 
          # @param permission [String] ('READ'|'READ_WRITE') 
          # @param create_route [String] ('OA_MANAGER'|'MESSAGING_API'|'POINT_AD'|'AD_MANAGER') 
          def initialize(
            audience_group_id: nil,
            type: nil,
            description: nil,
            status: nil,
            failed_type: nil,
            audience_count: nil,
            created: nil,
            request_id: nil,
            click_url: nil,
            is_ifa_audience: nil,
            permission: nil,
            create_route: nil,
            **dynamic_attributes
          )
            
            @audience_group_id = audience_group_id
            @type = type
            @description = description
            @status = status
            @failed_type = failed_type
            @audience_count = audience_count
            @created = created
            @request_id = request_id
            @click_url = click_url
            @is_ifa_audience = is_ifa_audience
            @permission = permission
            @create_route = create_route

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          def self.create(args)
            return new(**args)
          end
        end
      end
    end
  end
end
