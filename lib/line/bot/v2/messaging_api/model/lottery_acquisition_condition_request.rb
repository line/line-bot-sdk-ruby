# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

require_relative './acquisition_condition_request'

module Line
  module Bot
    module V2
      module MessagingApi
        class LotteryAcquisitionConditionRequest < AcquisitionConditionRequest
          # @!attribute [r] type
          #   @return [String] Determines how the coupon is distributed or used.
          attr_reader :type
          # @!attribute [rw] lottery_probability
          #   @return [Integer] Probability (1-99) of winning the coupon in lottery-type campaigns.
          attr_accessor :lottery_probability
          # @!attribute [rw] max_acquire_count
          #   @return [Integer] Maximum number of coupons that can be issued in total. Use -1 to indicate no limit
          attr_accessor :max_acquire_count

          # @param lottery_probability [Integer] Probability (1-99) of winning the coupon in lottery-type campaigns.
          # @param max_acquire_count [Integer] Maximum number of coupons that can be issued in total. Use -1 to indicate no limit
          def initialize(
            lottery_probability:,
            max_acquire_count:,
            **dynamic_attributes
          )
            @type = "lottery"
            
            @lottery_probability = lottery_probability
            @max_acquire_count = max_acquire_count

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::LotteryAcquisitionConditionRequest] Instance of the class
          def self.create(args) # steep:ignore
            symbolized_args = Line::Bot::V2::Utils.deep_symbolize(args)
            return new(**symbolized_args) # steep:ignore
          end

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==(other)
            return false unless self.class == other.class

            instance_variables.all? do |var|
                instance_variable_get(var) == other.instance_variable_get(var)
            end
          end

          # @return [Integer] Hash code of the object
          def hash
            [self.class, *instance_variables.map { |var| instance_variable_get(var) }].hash
          end
        end
      end
    end
  end
end
