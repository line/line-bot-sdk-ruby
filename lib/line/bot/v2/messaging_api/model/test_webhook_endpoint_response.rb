# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # @see https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint
        class TestWebhookEndpointResponse
          # @!attribute [rw] success
          #   @return [Boolean,nil] Result of the communication from the LINE platform to the webhook URL.
          attr_accessor :success
          # @!attribute [rw] timestamp
          #   @return [String] Time of the event in milliseconds. Even in the case of a redelivered webhook, it represents the time the event occurred, not the time it was redelivered. 
          attr_accessor :timestamp
          # @!attribute [rw] status_code
          #   @return [Integer] The HTTP status code. If the webhook response isn't received, the status code is set to zero or a negative number.
          attr_accessor :status_code
          # @!attribute [rw] reason
          #   @return [String] Reason for the response.
          attr_accessor :reason
          # @!attribute [rw] detail
          #   @return [String] Details of the response.
          attr_accessor :detail

          # @param success [Boolean,nil] Result of the communication from the LINE platform to the webhook URL.
          # @param timestamp [String] Time of the event in milliseconds. Even in the case of a redelivered webhook, it represents the time the event occurred, not the time it was redelivered. 
          # @param status_code [Integer] The HTTP status code. If the webhook response isn't received, the status code is set to zero or a negative number.
          # @param reason [String] Reason for the response.
          # @param detail [String] Details of the response.
          def initialize(
            success: nil,
            timestamp:,
            status_code:,
            reason:,
            detail:,
            **dynamic_attributes
          )
            
            @success = success
            @timestamp = timestamp
            @status_code = status_code
            @reason = reason
            @detail = detail

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          def self.create(args) # steep:ignore
            return new(**args) # steep:ignore
          end
        end
      end
    end
  end
end
