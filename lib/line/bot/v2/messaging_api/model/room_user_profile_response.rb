# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # @see https://developers.line.biz/en/reference/messaging-api/#get-room-member-profile
        class RoomUserProfileResponse
          # @!attribute [rw] display_name
          #   @return [String] User's display name
          attr_accessor :display_name
          # @!attribute [rw] user_id
          #   @return [String] User ID
          attr_accessor :user_id
          # @!attribute [rw] picture_url
          #   @return [String,nil] Profile image URL. `https` image URL. Not included in the response if the user doesn't have a profile image.
          attr_accessor :picture_url

          # @param display_name [String] User's display name
          # @param user_id [String] User ID
          # @param picture_url [String,nil] Profile image URL. `https` image URL. Not included in the response if the user doesn't have a profile image.
          def initialize(
            display_name:,
            user_id:,
            picture_url: nil,
            **dynamic_attributes
          )
            
            @display_name = display_name
            @user_id = user_id
            @picture_url = picture_url

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::RoomUserProfileResponse] Instance of the class
          def self.create(args) # steep:ignore
            symbolized_args = Line::Bot::V2::Utils.deep_symbolize(args)
            return new(**symbolized_args) # steep:ignore
          end

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==(other)
            return false unless self.class == other.class

            instance_variables.all? do |var|
                instance_variable_get(var) == other.instance_variable_get(var)
            end
          end

          # @return [Integer] Hash code of the object
          def hash
            [self.class, *instance_variables.map { |var| instance_variable_get(var) }].hash
          end
        end
      end
    end
  end
end
