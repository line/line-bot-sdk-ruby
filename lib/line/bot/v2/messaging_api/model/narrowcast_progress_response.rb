# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # @see https://developers.line.biz/en/reference/messaging-api/#get-narrowcast-progress-status
        class NarrowcastProgressResponse
          attr_accessor :phase # The current status. One of:  `waiting`: Messages are not yet ready to be sent. They are currently being filtered or processed in some way. `sending`: Messages are currently being sent. `succeeded`: Messages were sent successfully. This may not mean the messages were successfully received. `failed`: Messages failed to be sent. Use the failedDescription property to find the cause of the failure. 
          attr_accessor :success_count # The number of users who successfully received the message.
          attr_accessor :failure_count # The number of users who failed to send the message.
          attr_accessor :target_count # The number of intended recipients of the message.
          attr_accessor :failed_description # The reason the message failed to be sent. This is only included with a `phase` property value of `failed`.
          attr_accessor :error_code # Error summary. This is only included with a phase property value of failed. One of:  `1`: An internal error occurred. `2`: An error occurred because there weren't enough recipients. `3`: A conflict error of requests occurs because a request that has already been accepted is retried. `4`: An audience of less than 50 recipients is included as a condition of sending. 
          attr_accessor :accepted_time # Narrowcast message request accepted time in milliseconds.  Format: ISO 8601 (e.g. 2020-12-03T10:15:30.121Z) Timezone: UTC 
          attr_accessor :completed_time # Processing of narrowcast message request completion time in milliseconds. Returned when the phase property is succeeded or failed.  Format: ISO 8601 (e.g. 2020-12-03T10:15:30.121Z) Timezone: UTC 

          def initialize(
            phase:,
            success_count: nil,
            failure_count: nil,
            target_count: nil,
            failed_description: nil,
            error_code: nil,
            accepted_time:,
            completed_time: nil,
            **dynamic_attributes
          )
            
            @phase = phase
            @success_count = success_count
            @failure_count = failure_count
            @target_count = target_count
            @failed_description = failed_description
            @error_code = error_code
            @accepted_time = accepted_time
            @completed_time = completed_time

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          def self.create(args)
            return new(**args)
          end
        end
      end
    end
  end
end
