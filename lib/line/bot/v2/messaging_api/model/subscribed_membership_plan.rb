# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # Object containing information about the membership plan.
        class SubscribedMembershipPlan
          # @!attribute [rw] membership_id
          #   @return [Integer] Membership plan ID.
          attr_accessor :membership_id
          # @!attribute [rw] title
          #   @return [String] Membership plan name.
          attr_accessor :title
          # @!attribute [rw] description
          #   @return [String] Membership plan description.
          attr_accessor :description
          # @!attribute [rw] benefits
          #   @return [Array[String]] List of membership plan perks.
          attr_accessor :benefits
          # @!attribute [rw] price
          #   @return [Float] Monthly fee for membership plan. (e.g. 1500.00)
          attr_accessor :price
          # @!attribute [rw] currency
          #   @return [String] ('JPY'|'TWD'|'THB') The currency of membership.price.
          attr_accessor :currency

          # @param membership_id [Integer] Membership plan ID.
          # @param title [String] Membership plan name.
          # @param description [String] Membership plan description.
          # @param benefits [Array[String]] List of membership plan perks.
          # @param price [Float] Monthly fee for membership plan. (e.g. 1500.00)
          # @param currency [String] ('JPY'|'TWD'|'THB') The currency of membership.price.
          def initialize(
            membership_id:,
            title:,
            description:,
            benefits:,
            price:,
            currency:,
            **dynamic_attributes
          )
            
            @membership_id = membership_id
            @title = title
            @description = description
            @benefits = benefits
            @price = price
            @currency = currency

            dynamic_attributes.each do |key, value|
              self.class.attr_accessor key

              if value.is_a?(Hash)
                struct_klass = Struct.new(*value.keys.map(&:to_sym))
                struct_values = value.map { |_k, v| v.is_a?(Hash) ? Line::Bot::V2::Utils.hash_to_struct(v) : v }
                instance_variable_set("@#{key}", struct_klass.new(*struct_values))
              else
                instance_variable_set("@#{key}", value)
              end
            end
          end

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::SubscribedMembershipPlan] Instance of the class
          def self.create(args) # steep:ignore
            symbolized_args = Line::Bot::V2::Utils.deep_symbolize(args)
            return new(**symbolized_args) # steep:ignore
          end

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==(other)
            return false unless self.class == other.class

            instance_variables.all? do |var|
                instance_variable_get(var) == other.instance_variable_get(var)
            end
          end

          # @return [Integer] Hash code of the object
          def hash
            [self.class, *instance_variables.map { |var| instance_variable_get(var) }].hash
          end
        end
      end
    end
  end
end
