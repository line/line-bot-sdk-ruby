# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module ManageAudience
        # Create audience for uploading user IDs (by JSON)
        # @see https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group
        class CreateAudienceGroupResponse
          attr_accessor audience_group_id: Integer?
          attr_accessor create_route: 'MESSAGING_API'?
          attr_accessor type: 'UPLOAD'|'CLICK'|'IMP'|'CHAT_TAG'|'FRIEND_PATH'|'RESERVATION'|'APP_EVENT'|'VIDEO_VIEW'|'WEBTRAFFIC'|'IMAGE_CLICK'|'RICHMENU_IMP'|'RICHMENU_CLICK'?
          attr_accessor description: String?
          attr_accessor created: Integer?
          attr_accessor permission: 'READ'|'READ_WRITE'?
          attr_accessor expire_timestamp: Integer?
          attr_accessor is_ifa_audience: bool?
          

          # @param audience_group_id [Integer,nil] The audience ID.
          # @param create_route [String,nil] ('MESSAGING_API') How the audience was created.  `MESSAGING_API`: An audience created with Messaging API. 
          # @param type [String,nil] ('UPLOAD'|'CLICK'|'IMP'|'CHAT_TAG'|'FRIEND_PATH'|'RESERVATION'|'APP_EVENT'|'VIDEO_VIEW'|'WEBTRAFFIC'|'IMAGE_CLICK'|'RICHMENU_IMP'|'RICHMENU_CLICK') 
          # @param description [String,nil] The audience's name.
          # @param created [Integer,nil] When the audience was created (in UNIX time).
          # @param permission [String,nil] ('READ'|'READ_WRITE') Audience's update permission. Audiences linked to the same channel will be READ_WRITE.  `READ`: Can use only. `READ_WRITE`: Can use and update. 
          # @param expire_timestamp [Integer,nil] Time of audience expiration. Only returned for specific audiences. 
          # @param is_ifa_audience [bool,nil] The value indicating the type of account to be sent, as specified when creating the audience for uploading user IDs. One of:  `true`: Accounts are specified with IFAs. `false` (default): Accounts are specified with user IDs. 
          def initialize: (
            ?audience_group_id: Integer?,
            ?create_route: 'MESSAGING_API'?,
            ?type: 'UPLOAD'|'CLICK'|'IMP'|'CHAT_TAG'|'FRIEND_PATH'|'RESERVATION'|'APP_EVENT'|'VIDEO_VIEW'|'WEBTRAFFIC'|'IMAGE_CLICK'|'RICHMENU_IMP'|'RICHMENU_CLICK'?,
            ?description: String?,
            ?created: Integer?,
            ?permission: 'READ'|'READ_WRITE'?,
            ?expire_timestamp: Integer?,
            ?is_ifa_audience: bool?,
            **untyped dynamic_attributes
          ) -> void

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::ManageAudience::CreateAudienceGroupResponse] Instance of the class
          def self.create: (Hash[Symbol, untyped]) -> CreateAudienceGroupResponse

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==: (untyped other) -> bool

          # @return [Integer] Hash code of the object
          def hash: () -> Integer
        end
      end
    end
  end
end
