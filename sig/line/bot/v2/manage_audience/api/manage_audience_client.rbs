# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module ManageAudience
        class ApiClient
          @http_client: HttpClient
          def initialize: (
            ?base_url: String?,
            channel_access_token: String,
            ?http_options: Hash[String|Symbol, untyped]
          ) -> void

          # Add user IDs or Identifiers for Advertisers (IFAs) to an audience for uploading user IDs (by JSON)
          #
          # @param add_audience_to_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#update-upload-audience-group
          def add_audience_to_audience_group_with_http_info: (
            add_audience_to_audience_group_request: AddAudienceToAudienceGroupRequest
          ) -> (
            [String?, 202, Hash[untyped, untyped]] # when HTTP status code is 202
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Add user IDs or Identifiers for Advertisers (IFAs) to an audience for uploading user IDs (by JSON)
          #
          # @param add_audience_to_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#update-upload-audience-group
          def add_audience_to_audience_group: (
            add_audience_to_audience_group_request: AddAudienceToAudienceGroupRequest
          ) -> (
            String? # when HTTP status code is 202
            | String? # otherwise
          )

          # Create audience for uploading user IDs (by JSON)
          #
          # @param create_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group
          def create_audience_group_with_http_info: (
            create_audience_group_request: CreateAudienceGroupRequest
          ) -> (
            [CreateAudienceGroupResponse, 202, Hash[untyped, untyped]] # when HTTP status code is 202
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Create audience for uploading user IDs (by JSON)
          #
          # @param create_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group
          def create_audience_group: (
            create_audience_group_request: CreateAudienceGroupRequest
          ) -> (
            CreateAudienceGroupResponse # when HTTP status code is 202
            | String? # otherwise
          )

          # Create audience for click-based retargeting
          #
          # @param create_click_based_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#create-click-audience-group
          def create_click_based_audience_group_with_http_info: (
            create_click_based_audience_group_request: CreateClickBasedAudienceGroupRequest
          ) -> (
            [CreateClickBasedAudienceGroupResponse, 202, Hash[untyped, untyped]] # when HTTP status code is 202
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Create audience for click-based retargeting
          #
          # @param create_click_based_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#create-click-audience-group
          def create_click_based_audience_group: (
            create_click_based_audience_group_request: CreateClickBasedAudienceGroupRequest
          ) -> (
            CreateClickBasedAudienceGroupResponse # when HTTP status code is 202
            | String? # otherwise
          )

          # Create audience for impression-based retargeting
          #
          # @param create_imp_based_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#create-imp-audience-group
          def create_imp_based_audience_group_with_http_info: (
            create_imp_based_audience_group_request: CreateImpBasedAudienceGroupRequest
          ) -> (
            [CreateImpBasedAudienceGroupResponse, 202, Hash[untyped, untyped]] # when HTTP status code is 202
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Create audience for impression-based retargeting
          #
          # @param create_imp_based_audience_group_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#create-imp-audience-group
          def create_imp_based_audience_group: (
            create_imp_based_audience_group_request: CreateImpBasedAudienceGroupRequest
          ) -> (
            CreateImpBasedAudienceGroupResponse # when HTTP status code is 202
            | String? # otherwise
          )

          # Delete audience
          #
          # @param audience_group_id The audience ID.
          # @see https://developers.line.biz/en/reference/messaging-api/#delete-audience-group
          def delete_audience_group_with_http_info: (
            audience_group_id: Integer
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Delete audience
          #
          # @param audience_group_id The audience ID.
          # @see https://developers.line.biz/en/reference/messaging-api/#delete-audience-group
          def delete_audience_group: (
            audience_group_id: Integer
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )

          # Gets audience data.
          #
          # @param audience_group_id The audience ID.
          # @see https://developers.line.biz/en/reference/messaging-api/#get-audience-group
          def get_audience_data_with_http_info: (
            audience_group_id: Integer
          ) -> (
            [GetAudienceDataResponse, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [ErrorResponse, 400, Hash[untyped, untyped]] # when HTTP status code is 400
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Gets audience data.
          #
          # @param audience_group_id The audience ID.
          # @see https://developers.line.biz/en/reference/messaging-api/#get-audience-group
          def get_audience_data: (
            audience_group_id: Integer
          ) -> (
            GetAudienceDataResponse # when HTTP status code is 200
            | ErrorResponse # when HTTP status code is 400
            | String? # otherwise
          )

          # Gets data for more than one audience.
          #
          # @param page The page to return when getting (paginated) results. Must be 1 or higher.
          # @param description The name of the audience(s) to return. You can search for partial matches. This is case-insensitive, meaning AUDIENCE and audience are considered identical. If omitted, the name of the audience(s) will not be used as a search criterion. 
          # @param status The status of the audience(s) to return. If omitted, the status of the audience(s) will not be used as a search criterion. 
          # @param size The number of audiences per page. Default: 20 Max: 40 
          # @param includes_external_public_groups true (default): Get public audiences created in all channels linked to the same bot. false: Get audiences created in the same channel. 
          # @param create_route How the audience was created. If omitted, all audiences are included.  `OA_MANAGER`: Return only audiences created with LINE Official Account Manager (opens new window). `MESSAGING_API`: Return only audiences created with Messaging API. 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-audience-groups
          def get_audience_groups_with_http_info: (
            page: Integer, 
            ?description: String?, 
            ?status: AudienceGroupStatus?, 
            ?size: Integer?, 
            ?includes_external_public_groups: bool?, 
            ?create_route: AudienceGroupCreateRoute?
          ) -> (
            [GetAudienceGroupsResponse, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Gets data for more than one audience.
          #
          # @param page The page to return when getting (paginated) results. Must be 1 or higher.
          # @param description The name of the audience(s) to return. You can search for partial matches. This is case-insensitive, meaning AUDIENCE and audience are considered identical. If omitted, the name of the audience(s) will not be used as a search criterion. 
          # @param status The status of the audience(s) to return. If omitted, the status of the audience(s) will not be used as a search criterion. 
          # @param size The number of audiences per page. Default: 20 Max: 40 
          # @param includes_external_public_groups true (default): Get public audiences created in all channels linked to the same bot. false: Get audiences created in the same channel. 
          # @param create_route How the audience was created. If omitted, all audiences are included.  `OA_MANAGER`: Return only audiences created with LINE Official Account Manager (opens new window). `MESSAGING_API`: Return only audiences created with Messaging API. 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-audience-groups
          def get_audience_groups: (
            page: Integer, 
            ?description: String?, 
            ?status: AudienceGroupStatus?, 
            ?size: Integer?, 
            ?includes_external_public_groups: bool?, 
            ?create_route: AudienceGroupCreateRoute?
          ) -> (
            GetAudienceGroupsResponse # when HTTP status code is 200
            | String? # otherwise
          )

          # Gets audience data.
          #
          # @param audience_group_id The audience ID.
          # @see https://developers.line.biz/en/reference/messaging-api/#get-shared-audience
          def get_shared_audience_data_with_http_info: (
            audience_group_id: Integer
          ) -> (
            [GetSharedAudienceDataResponse, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [ErrorResponse, 400, Hash[untyped, untyped]] # when HTTP status code is 400
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Gets audience data.
          #
          # @param audience_group_id The audience ID.
          # @see https://developers.line.biz/en/reference/messaging-api/#get-shared-audience
          def get_shared_audience_data: (
            audience_group_id: Integer
          ) -> (
            GetSharedAudienceDataResponse # when HTTP status code is 200
            | ErrorResponse # when HTTP status code is 400
            | String? # otherwise
          )

          # Gets data for more than one audience, including those shared by the Business Manager.
          #
          # @param page The page to return when getting (paginated) results. Must be 1 or higher.
          # @param description The name of the audience(s) to return. You can search for partial matches. This is case-insensitive, meaning AUDIENCE and audience are considered identical. If omitted, the name of the audience(s) will not be used as a search criterion. 
          # @param status The status of the audience(s) to return. If omitted, the status of the audience(s) will not be used as a search criterion. 
          # @param size The number of audiences per page. Default: 20 Max: 40 
          # @param create_route How the audience was created. If omitted, all audiences are included.  `OA_MANAGER`: Return only audiences created with LINE Official Account Manager (opens new window). `MESSAGING_API`: Return only audiences created with Messaging API. 
          # @param includes_owned_audience_groups true: Include audienceGroups owned by LINE Official Account Manager false: Respond only audienceGroups shared by Business Manager 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-shared-audience-list
          def get_shared_audience_groups_with_http_info: (
            page: Integer, 
            ?description: String?, 
            ?status: AudienceGroupStatus?, 
            ?size: Integer?, 
            ?create_route: AudienceGroupCreateRoute?, 
            ?includes_owned_audience_groups: bool?
          ) -> (
            [GetSharedAudienceGroupsResponse, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Gets data for more than one audience, including those shared by the Business Manager.
          #
          # @param page The page to return when getting (paginated) results. Must be 1 or higher.
          # @param description The name of the audience(s) to return. You can search for partial matches. This is case-insensitive, meaning AUDIENCE and audience are considered identical. If omitted, the name of the audience(s) will not be used as a search criterion. 
          # @param status The status of the audience(s) to return. If omitted, the status of the audience(s) will not be used as a search criterion. 
          # @param size The number of audiences per page. Default: 20 Max: 40 
          # @param create_route How the audience was created. If omitted, all audiences are included.  `OA_MANAGER`: Return only audiences created with LINE Official Account Manager (opens new window). `MESSAGING_API`: Return only audiences created with Messaging API. 
          # @param includes_owned_audience_groups true: Include audienceGroups owned by LINE Official Account Manager false: Respond only audienceGroups shared by Business Manager 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-shared-audience-list
          def get_shared_audience_groups: (
            page: Integer, 
            ?description: String?, 
            ?status: AudienceGroupStatus?, 
            ?size: Integer?, 
            ?create_route: AudienceGroupCreateRoute?, 
            ?includes_owned_audience_groups: bool?
          ) -> (
            GetSharedAudienceGroupsResponse # when HTTP status code is 200
            | String? # otherwise
          )

          # Renames an existing audience.
          #
          # @param audience_group_id The audience ID.
          # @param update_audience_group_description_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#set-description-audience-group
          def update_audience_group_description_with_http_info: (
            audience_group_id: Integer, 
            update_audience_group_description_request: UpdateAudienceGroupDescriptionRequest
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Renames an existing audience.
          #
          # @param audience_group_id The audience ID.
          # @param update_audience_group_description_request 
          # @see https://developers.line.biz/en/reference/messaging-api/#set-description-audience-group
          def update_audience_group_description: (
            audience_group_id: Integer, 
            update_audience_group_description_request: UpdateAudienceGroupDescriptionRequest
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )
        end
      end
    end
  end
end
