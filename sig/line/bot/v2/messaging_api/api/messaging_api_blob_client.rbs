# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        class ApiBlobClient
          @http_client: HttpClient
          def initialize: (
            ?base_url: String?,
            channel_access_token: String,
            ?http_options: Hash[String|Symbol, untyped]
          ) -> void

          # Download image, video, and audio data sent from users.
          #
          # @param message_id Message ID of video or audio
          # @see https://developers.line.biz/en/reference/messaging-api/#get-content
          def get_message_content_with_http_info: (
            message_id: String
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Download image, video, and audio data sent from users.
          #
          # @param message_id Message ID of video or audio
          # @see https://developers.line.biz/en/reference/messaging-api/#get-content
          def get_message_content: (
            message_id: String
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )

          # Get a preview image of the image or video
          #
          # @param message_id Message ID of image or video
          # @see https://developers.line.biz/en/reference/messaging-api/#get-image-or-video-preview
          def get_message_content_preview_with_http_info: (
            message_id: String
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Get a preview image of the image or video
          #
          # @param message_id Message ID of image or video
          # @see https://developers.line.biz/en/reference/messaging-api/#get-image-or-video-preview
          def get_message_content_preview: (
            message_id: String
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )

          # Verify the preparation status of a video or audio for getting
          #
          # @param message_id Message ID of video or audio
          # @see https://developers.line.biz/en/reference/messaging-api/#verify-video-or-audio-preparation-status
          def get_message_content_transcoding_by_message_id_with_http_info: (
            message_id: String
          ) -> (
            [GetMessageContentTranscodingResponse, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Verify the preparation status of a video or audio for getting
          #
          # @param message_id Message ID of video or audio
          # @see https://developers.line.biz/en/reference/messaging-api/#verify-video-or-audio-preparation-status
          def get_message_content_transcoding_by_message_id: (
            message_id: String
          ) -> (
            GetMessageContentTranscodingResponse # when HTTP status code is 200
            | String? # otherwise
          )

          # Download rich menu image.
          #
          # @param rich_menu_id ID of the rich menu with the image to be downloaded
          # @see https://developers.line.biz/en/reference/messaging-api/#download-rich-menu-image
          def get_rich_menu_image_with_http_info: (
            rich_menu_id: String
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Download rich menu image.
          #
          # @param rich_menu_id ID of the rich menu with the image to be downloaded
          # @see https://developers.line.biz/en/reference/messaging-api/#download-rich-menu-image
          def get_rich_menu_image: (
            rich_menu_id: String
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )

          # Upload rich menu image
          #
          # @param rich_menu_id The ID of the rich menu to attach the image to
          # @param body 
          # @see https://developers.line.biz/en/reference/messaging-api/#upload-rich-menu-image
          def set_rich_menu_image_with_http_info: (
            rich_menu_id: String, 
            ?body: File?
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Upload rich menu image
          #
          # @param rich_menu_id The ID of the rich menu to attach the image to
          # @param body 
          # @see https://developers.line.biz/en/reference/messaging-api/#upload-rich-menu-image
          def set_rich_menu_image: (
            rich_menu_id: String, 
            ?body: File?
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )
        end
      end
    end
  end
end
