# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # Object containing information about the membership plan.
        class SubscribedMembershipPlan
          attr_accessor membership_id: Integer
          attr_accessor title: String
          attr_accessor description: String
          attr_accessor benefits: Array[String]
          attr_accessor price: Float
          attr_accessor currency: 'JPY'|'TWD'|'THB'
          

          # @param membership_id [Integer] Membership plan ID.
          # @param title [String] Membership plan name.
          # @param description [String] Membership plan description.
          # @param benefits [Array[String]] List of membership plan perks.
          # @param price [Float] Monthly fee for membership plan. (e.g. 1500.00)
          # @param currency [String] ('JPY'|'TWD'|'THB') The currency of membership.price.
          def initialize: (
            membership_id: Integer,
            title: String,
            description: String,
            benefits: Array[String],
            price: Float,
            currency: 'JPY'|'TWD'|'THB',
            **untyped dynamic_attributes
          ) -> void

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::SubscribedMembershipPlan] Instance of the class
          def self.create: (Hash[Symbol, untyped]) -> SubscribedMembershipPlan

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==: (untyped other) -> bool

          # @return [Integer] Hash code of the object
          def hash: () -> Integer
        end
      end
    end
  end
end
