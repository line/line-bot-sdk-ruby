# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # @see https://developers.line.biz/en/reference/messaging-api/#icon
        class FlexIcon < FlexComponent
          attr_reader type: String
          attr_accessor url: String
          attr_accessor size: String?
          attr_accessor aspect_ratio: String?
          attr_accessor margin: String?
          attr_accessor position: 'relative'|'absolute'?
          attr_accessor offset_top: String?
          attr_accessor offset_bottom: String?
          attr_accessor offset_start: String?
          attr_accessor offset_end: String?
          attr_accessor scaling: bool?
          

          # @param url [String] 
          # @param size [String,nil] 
          # @param aspect_ratio [String,nil] 
          # @param margin [String,nil] 
          # @param position [String,nil] ('relative'|'absolute') 
          # @param offset_top [String,nil] 
          # @param offset_bottom [String,nil] 
          # @param offset_start [String,nil] 
          # @param offset_end [String,nil] 
          # @param scaling [bool,nil] 
          def initialize: (
            url: String,
            ?size: String?,
            ?aspect_ratio: String?,
            ?margin: String?,
            ?position: 'relative'|'absolute'?,
            ?offset_top: String?,
            ?offset_bottom: String?,
            ?offset_start: String?,
            ?offset_end: String?,
            ?scaling: bool?,
            **untyped dynamic_attributes
          ) -> void

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::FlexIcon] Instance of the class
          def self.create: (Hash[Symbol, untyped]) -> FlexIcon

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==: (untyped other) -> bool

          # @return [Integer] Hash code of the object
          def hash: () -> Integer
        end
      end
    end
  end
end
