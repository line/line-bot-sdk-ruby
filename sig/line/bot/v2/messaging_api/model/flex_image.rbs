# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        # @see https://developers.line.biz/en/reference/messaging-api/#f-image
        class FlexImage < FlexComponent
          attr_reader type: String
          attr_accessor url: String
          attr_accessor flex: Integer?
          attr_accessor margin: String?
          attr_accessor position: 'relative'|'absolute'?
          attr_accessor offset_top: String?
          attr_accessor offset_bottom: String?
          attr_accessor offset_start: String?
          attr_accessor offset_end: String?
          attr_accessor align: 'start'|'end'|'center'?
          attr_accessor gravity: 'top'|'bottom'|'center'?
          attr_accessor size: String?
          attr_accessor aspect_ratio: String?
          attr_accessor aspect_mode: 'fit'|'cover'?
          attr_accessor background_color: String?
          attr_accessor action: Action?
          attr_accessor animated: bool?
          

          # @param url [String] Image URL (Max character limit: 2000) Protocol: HTTPS (TLS 1.2 or later) Image format: JPEG or PNG Maximum image size: 1024Ã—1024 pixels Maximum file size: 10 MB (300 KB when the animated property is true) 
          # @param flex [Integer,nil] The ratio of the width or height of this component within the parent box.
          # @param margin [String,nil] The minimum amount of space to include before this component in its parent container. 
          # @param position [String,nil] ('relative'|'absolute') Reference for offsetTop, offsetBottom, offsetStart, and offsetEnd. Specify one of the following values:  `relative`: Use the previous box as reference. `absolute`: Use the top left of parent element as reference. The default value is relative. 
          # @param offset_top [String,nil] Offset.
          # @param offset_bottom [String,nil] Offset.
          # @param offset_start [String,nil] Offset.
          # @param offset_end [String,nil] Offset.
          # @param align [String,nil] ('start'|'end'|'center') Alignment style in horizontal direction. 
          # @param gravity [String,nil] ('top'|'bottom'|'center') Alignment style in vertical direction.
          # @param size [String,nil] The maximum image width. This is md by default. 
          # @param aspect_ratio [String,nil] Aspect ratio of the image. `{width}:{height}` format. Specify the value of `{width}` and `{height}` in the range from `1` to `100000`. However, you cannot set `{height}` to a value that is more than three times the value of `{width}`. The default value is `1:1`. 
          # @param aspect_mode [String,nil] ('fit'|'cover') The display style of the image if the aspect ratio of the image and that specified by the aspectRatio property do not match. 
          # @param background_color [String,nil] Background color of the image. Use a hexadecimal color code.
          # @param action [Action, Hash[Symbol, untyped], nil] 
          # @param animated [bool,nil] When this is `true`, an animated image (APNG) plays. You can specify a value of true up to 10 images in a single message. You can't send messages that exceed this limit. This is `false` by default. Animated images larger than 300 KB aren't played back. 
          def initialize: (
            url: String,
            ?flex: Integer?,
            ?margin: String?,
            ?position: 'relative'|'absolute'?,
            ?offset_top: String?,
            ?offset_bottom: String?,
            ?offset_start: String?,
            ?offset_end: String?,
            ?align: 'start'|'end'|'center'?,
            ?gravity: 'top'|'bottom'|'center'?,
            ?size: String?,
            ?aspect_ratio: String?,
            ?aspect_mode: 'fit'|'cover'?,
            ?background_color: String?,
            ?action: Action?| Hash[Symbol, untyped]?,
            ?animated: bool?,
            **untyped dynamic_attributes
          ) -> void

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::FlexImage] Instance of the class
          def self.create: (Hash[Symbol, untyped]) -> FlexImage

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==: (untyped other) -> bool

          # @return [Integer] Hash code of the object
          def hash: () -> Integer
        end
      end
    end
  end
end
