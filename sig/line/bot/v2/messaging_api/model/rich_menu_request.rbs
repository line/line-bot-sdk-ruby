# LINE Messaging API
# This document describes LINE Messaging API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module MessagingApi
        class RichMenuRequest
          attr_accessor size: RichMenuSize?
          attr_accessor selected: bool?
          attr_accessor name: String?
          attr_accessor chat_bar_text: String?
          attr_accessor areas: Array[RichMenuArea]?
          

          # @param size [RichMenuSize, Hash[Symbol, untyped], nil] 
          # @param selected [bool,nil] `true` to display the rich menu by default. Otherwise, `false`.
          # @param name [String,nil] Name of the rich menu. This value can be used to help manage your rich menus and is not displayed to users.
          # @param chat_bar_text [String,nil] Text displayed in the chat bar
          # @param areas [Array[RichMenuArea, Hash[Symbol, untyped]],nil] Array of area objects which define the coordinates and size of tappable areas
          def initialize: (
            ?size: RichMenuSize?| Hash[Symbol, untyped]?,
            ?selected: bool?,
            ?name: String?,
            ?chat_bar_text: String?,
            ?areas: Array[RichMenuArea| Hash[Symbol, untyped]]?,
            **untyped dynamic_attributes
          ) -> void

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::MessagingApi::RichMenuRequest] Instance of the class
          def self.create: (Hash[Symbol, untyped]) -> RichMenuRequest

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==: (untyped other) -> bool

          # @return [Integer] Hash code of the object
          def hash: () -> Integer
        end
      end
    end
  end
end
