# LINE Messaging API(Insight)
# This document describes LINE Messaging API(Insight).
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Insight
        class ApiClient
          def initialize: (
            base_url: String?,
            channel_access_token: String,
            http_options: Hash[String|Symbol, untyped]
          ) -> void

          # Retrieves the demographic attributes for a LINE Official Account's friends.You can only retrieve information about friends for LINE Official Accounts created by users in Japan (JP), Thailand (TH), Taiwan (TW) and Indonesia (ID). 
          #
          # @see https://developers.line.biz/en/reference/messaging-api/#get-demographic
          def get_friends_demographics_with_http_info: (
          ) -> [(GetFriendsDemographicsResponse), Integer, Hash[String, String]]

          # Retrieves the demographic attributes for a LINE Official Account's friends.You can only retrieve information about friends for LINE Official Accounts created by users in Japan (JP), Thailand (TH), Taiwan (TW) and Indonesia (ID). 
          #
          # @see https://developers.line.biz/en/reference/messaging-api/#get-demographic
          def get_friends_demographics: (
          ) -> (GetFriendsDemographicsResponse)

          # Returns statistics about how users interact with narrowcast messages or broadcast messages sent from your LINE Official Account. 
          #
          # @summary Get user interaction statistics
          # @param request_id Request ID of a narrowcast message or broadcast message. Each Messaging API request has a request ID. 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-message-event
          def get_message_event_with_http_info: (
            request_id: String
          ) -> [(GetMessageEventResponse), Integer, Hash[String, String]]

          # Returns statistics about how users interact with narrowcast messages or broadcast messages sent from your LINE Official Account. 
          #
          # @summary Get user interaction statistics
          # @param request_id Request ID of a narrowcast message or broadcast message. Each Messaging API request has a request ID. 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-message-event
          def get_message_event: (
            request_id: String
          ) -> (GetMessageEventResponse)

          # Returns the number of users who have added the LINE Official Account on or before a specified date. 
          #
          # @summary Get number of followers
          # @param date Date for which to retrieve the number of followers.  Format: yyyyMMdd (e.g. 20191231) Timezone: UTC+9 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-number-of-followers
          def get_number_of_followers_with_http_info: (
            date: String?
          ) -> [(GetNumberOfFollowersResponse), Integer, Hash[String, String]]

          # Returns the number of users who have added the LINE Official Account on or before a specified date. 
          #
          # @summary Get number of followers
          # @param date Date for which to retrieve the number of followers.  Format: yyyyMMdd (e.g. 20191231) Timezone: UTC+9 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-number-of-followers
          def get_number_of_followers: (
            date: String?
          ) -> (GetNumberOfFollowersResponse)

          # Returns the number of messages sent from LINE Official Account on a specified day. 
          #
          # @summary Get number of message deliveries
          # @param date Date for which to retrieve number of sent messages. - Format: yyyyMMdd (e.g. 20191231) - Timezone: UTC+9 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-number-of-delivery-messages
          def get_number_of_message_deliveries_with_http_info: (
            date: String
          ) -> [(GetNumberOfMessageDeliveriesResponse), Integer, Hash[String, String]]

          # Returns the number of messages sent from LINE Official Account on a specified day. 
          #
          # @summary Get number of message deliveries
          # @param date Date for which to retrieve number of sent messages. - Format: yyyyMMdd (e.g. 20191231) - Timezone: UTC+9 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-number-of-delivery-messages
          def get_number_of_message_deliveries: (
            date: String
          ) -> (GetNumberOfMessageDeliveriesResponse)

          # You can check the per-unit statistics of how users interact with push messages and multicast messages sent from your LINE Official Account. 
          #
          # @param custom_aggregation_unit Name of aggregation unit specified when sending the message. Case-sensitive. For example, `Promotion_a` and `Promotion_A` are regarded as different unit names. 
          # @param from Start date of aggregation period.  Format: yyyyMMdd (e.g. 20210301) Time zone: UTC+9 
          # @param to End date of aggregation period. The end date can be specified for up to 30 days later. For example, if the start date is 20210301, the latest end date is 20210331.  Format: yyyyMMdd (e.g. 20210301) Time zone: UTC+9 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit
          def get_statistics_per_unit_with_http_info: (
            custom_aggregation_unit: String, 
            from: String, 
            to: String
          ) -> [(GetStatisticsPerUnitResponse), Integer, Hash[String, String]]

          # You can check the per-unit statistics of how users interact with push messages and multicast messages sent from your LINE Official Account. 
          #
          # @param custom_aggregation_unit Name of aggregation unit specified when sending the message. Case-sensitive. For example, `Promotion_a` and `Promotion_A` are regarded as different unit names. 
          # @param from Start date of aggregation period.  Format: yyyyMMdd (e.g. 20210301) Time zone: UTC+9 
          # @param to End date of aggregation period. The end date can be specified for up to 30 days later. For example, if the start date is 20210301, the latest end date is 20210331.  Format: yyyyMMdd (e.g. 20210301) Time zone: UTC+9 
          # @see https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit
          def get_statistics_per_unit: (
            custom_aggregation_unit: String, 
            from: String, 
            to: String
          ) -> (GetStatisticsPerUnitResponse)
        end
      end
    end
  end
end
