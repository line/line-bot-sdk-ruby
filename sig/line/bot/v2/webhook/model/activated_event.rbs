# Webhook Type Definition
# Webhook event definition of the LINE Messaging API
#
# The version of the OpenAPI document: 1.0.0
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Webhook
        # This event indicates that the module channel has been switched to Active Channel by calling the Acquire Control API. Sent to the webhook URL server of the module channel.
        class ActivatedEvent < Event
          attr_reader type: String
          attr_accessor source: Source?
          attr_accessor timestamp: Integer
          attr_accessor mode: 'active'|'standby'
          attr_accessor webhook_event_id: String
          attr_accessor delivery_context: DeliveryContext
          attr_accessor chat_control: ChatControl
          

          # @param source [Source, Hash[Symbol, untyped], nil] 
          # @param timestamp [Integer] Time of the event in milliseconds.
          # @param mode [String] ('active'|'standby') 
          # @param webhook_event_id [String] Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
          # @param delivery_context [DeliveryContext, Hash[Symbol, untyped]] 
          # @param chat_control [ChatControl, Hash[Symbol, untyped]] 
          def initialize: (
            ?source: Source?| Hash[Symbol, untyped]?,
            timestamp: Integer,
            mode: 'active'|'standby',
            webhook_event_id: String,
            delivery_context: DeliveryContext| Hash[Symbol, untyped],
            chat_control: ChatControl| Hash[Symbol, untyped],
            **untyped dynamic_attributes
          ) -> void

          # Create an instance of the class from a hash
          # @param args [Hash] Hash containing all the required attributes
          # @return [Line::Bot::V2::Webhook::ActivatedEvent] Instance of the class
          def self.create: (Hash[Symbol, untyped]) -> ActivatedEvent

          # @param other [Object] Object to compare
          # @return [Boolean] true if the objects are equal, false otherwise
          def ==: (untyped other) -> bool

          # @return [Integer] Hash code of the object
          def hash: () -> Integer
        end
      end
    end
  end
end
