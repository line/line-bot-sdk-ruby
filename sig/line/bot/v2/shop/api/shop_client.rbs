# Mission Stickers API
# This document describes LINE Mission Stickers API.
#
# The version of the OpenAPI document: 0.0.1
#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

module Line
  module Bot
    module V2
      module Shop
        class ApiClient
          @http_client: HttpClient
          # Initializes a new {Line::Bot::V2::Shop::ApiClient} instance.
          #
          # @param base_url [String] The base URL for requests (optional).
          #   Defaults to 'https://api.line.me' if none is provided.
          #   You can override this for testing or to use a mock server.
          # @param channel_access_token [String] The channel access token for authorization.
          # @param http_options [Hash] HTTP options (same as Net::HTTP options).
          #   See: https://docs.ruby-lang.org/en/3.4/Net/HTTP.html to understand the options.
          #
          # @example
          #   @client ||= Line::Bot::V2::Shop::ApiClient.new(
          #     channel_access_token: "YOUR_CHANNEL_ACCESS_TOKEN",
          #     http_options: {
          #       open_timeout: 5,
          #       read_timeout: 5,
          #     }
          #   )
          def initialize: (
            ?base_url: String?,
            channel_access_token: String,
            ?http_options: Hash[String|Symbol, untyped]
          ) -> void

          # Sends a mission sticker.
          # This requests to <code>POST https://api.line.me/shop/v3/mission</code>
          # This returns an array containing response, HTTP status code, and header in order. Please specify all header keys in lowercase.
          #
          # @param mission_sticker_request [MissionStickerRequest] 
          # @see https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3
          # @return [Array((String|nil), Integer, Hash{String => String})] when HTTP status code is 200
          # @return [Array((String|nil), Integer, Hash{String => String})] when other HTTP status code is returned. String is HTTP response body itself.
          def mission_sticker_v3_with_http_info: (
            mission_sticker_request: MissionStickerRequest
          ) -> (
            [String?, 200, Hash[untyped, untyped]] # when HTTP status code is 200
            | [String?, Integer, Hash[untyped, untyped]] # otherwise
          )

          # Sends a mission sticker.
          # This requests to <code>POST https://api.line.me/shop/v3/mission</code>
          # When you want to get HTTP status code or response headers, use {#mission_sticker_v3_with_http_info} instead of this.
          #
          # @param mission_sticker_request [MissionStickerRequest] 
          # @see https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3
          # @return [String, nil] when HTTP status code is 200
          # @return [String, nil] when other HTTP status code is returned. This String is HTTP response body itself.
          def mission_sticker_v3: (
            mission_sticker_request: MissionStickerRequest
          ) -> (
            String? # when HTTP status code is 200
            | String? # otherwise
          )
        end
      end
    end
  end
end
